# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: RateLimiting

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET Build
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore OnlineBankingSOA/OnlineBanking.sln
      
    - name: Build API
      run: dotnet build OnlineBankingAPIGateway/OnlineBankingAPIGateway.csproj --no-restore

    - name: Build Backend
      run: dotnet build OnlineBankingSOA/OnlineBanking.csproj --no-restore
      
    - id: Test
     # if: steps.build.outcome == 'success'
      name: Test
      run: dotnet test OnlineBankingTest/OnlineBankingTest.csproj --collect "XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

    - id: coverage
      name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: OnlineBankingTest/TestResults/**/coverage.cobertura.xml
        badge: false
        fail_below_min: false        
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: console

    - name: Create Separate Publish Directories
      run: |
        mkdir -p ./publish/apigateway
        mkdir -p ./publish/backend

    # Publish API Gateway Separately  
    - name: Publish API Gateway  
      run: dotnet publish OnlineBankingAPIGateway/OnlineBankingAPIGateway.csproj -c Release -o ./publish/apigateway --self-contained -r linux-x64 /p:UseAppHost=true  

    # Publish Backend Separately  
    - name: Publish Backend  
      run: dotnet publish OnlineBankingSOA/OnlineBanking.csproj -c Release -o ./publish/backend --self-contained -r linux-x64 /p:UseAppHost=true  
    
    # Zip API Gateway  
    - name: Zip API Gateway  
      run: zip -r apigateway.zip ./publish/apigateway/*  
    
    # Zip Backend  
    - name: Zip Backend  
      run: zip -r backend.zip ./publish/backend/*  
    
    # Upload API Gateway Artifact  
    - name: Upload API Gateway Artifact  
      uses: actions/upload-artifact@v4  
      with:  
        name: apigateway-package  
        path: apigateway.zip  
    
    # Upload Backend Artifact  
    - name: Upload Backend Artifact  
      uses: actions/upload-artifact@v4  
      with:  
        name: backend-package  
        path: backend.zip  


    # deploy:
    # needs: build
    # runs-on: ubuntu-latest
    
    # steps:
    # - name: Download Artifact
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: dotnet-webapp        

    # - name: Azure Login
    #   uses: azure/login@v2
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Deploy to Azure
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: api-gateway
    #     package: app.zip 
